// CodeGear C++Builder
// Copyright (c) 1995, 2016 by Embarcadero Technologies, Inc.
// All rights reserved

// (DO NOT EDIT: machine generated header) 'frxIntIOIndy25.dpk' rev: 32.00 (Windows)

#ifndef Frxintioindy25HPP
#define Frxintioindy25HPP

#pragma delphiheader begin
#pragma option push
#pragma option -w-      // All warnings off
#pragma option -Vx      // Zero-length empty class member 
#pragma pack(push,8)
#include <System.hpp>	// (rtl)
#include <SysInit.hpp>
#include <frxTransportIndyConnector.hpp>
#include <frxTransportIndyConnectorHTTP.hpp>
#include <frxIOTransportDropboxIndy.hpp>
#include <frxIOTransportOneDriveIndy.hpp>
#include <frxIOTransportBoxComIndy.hpp>
#include <frxIOTransportGoogleDriveIndy.hpp>
#include <frxIOTransportIndyMail.hpp>
#include <frxIOTransportFTP.hpp>
#include <Winapi.Windows.hpp>	// (rtl)
#include <Winapi.PsAPI.hpp>	// (rtl)
#include <System.Character.hpp>	// (rtl)
#include <System.Internal.ExcUtils.hpp>	// (rtl)
#include <System.SysUtils.hpp>	// (rtl)
#include <System.VarUtils.hpp>	// (rtl)
#include <System.Variants.hpp>	// (rtl)
#include <System.Math.hpp>	// (rtl)
#include <System.Rtti.hpp>	// (rtl)
#include <System.TypInfo.hpp>	// (rtl)
#include <System.Generics.Defaults.hpp>	// (rtl)
#include <System.Classes.hpp>	// (rtl)
#include <System.TimeSpan.hpp>	// (rtl)
#include <System.SyncObjs.hpp>	// (rtl)
#include <System.DateUtils.hpp>	// (rtl)
#include <IdGlobal.hpp>	// (IndySystem)
#include <System.AnsiStrings.hpp>	// (rtl)
#include <IdWinsock2.hpp>	// (IndySystem)
#include <IdWship6.hpp>	// (IndySystem)
#include <IdIDN.hpp>	// (IndySystem)
#include <IdStackWindows.hpp>	// (IndySystem)
#include <IdStack.hpp>	// (IndySystem)
#include <IdComponent.hpp>	// (IndySystem)
#include <IdIOHandler.hpp>	// (IndyCore)
#include <IdIOHandlerStack.hpp>	// (IndyCore)
#include <Winapi.ShellAPI.hpp>	// (rtl)
#include <System.IOUtils.hpp>	// (rtl)
#include <System.Win.Registry.hpp>	// (rtl)
#include <Vcl.Graphics.hpp>	// (vcl)
#include <System.Actions.hpp>	// (rtl)
#include <Vcl.ActnList.hpp>	// (vcl)
#include <System.HelpIntfs.hpp>	// (rtl)
#include <Winapi.UxTheme.hpp>	// (rtl)
#include <Vcl.GraphUtil.hpp>	// (vcl)
#include <Vcl.StdCtrls.hpp>	// (vcl)
#include <Vcl.Printers.hpp>	// (vcl)
#include <Vcl.Clipbrd.hpp>	// (vcl)
#include <Vcl.ComCtrls.hpp>	// (vcl)
#include <Vcl.Dialogs.hpp>	// (vcl)
#include <Vcl.ExtCtrls.hpp>	// (vcl)
#include <Vcl.Themes.hpp>	// (vcl)
#include <System.Win.ComObj.hpp>	// (rtl)
#include <Winapi.FlatSB.hpp>	// (rtl)
#include <Vcl.Forms.hpp>	// (vcl)
#include <Vcl.Menus.hpp>	// (vcl)
#include <Winapi.MsCTF.hpp>	// (rtl)
#include <Vcl.Controls.hpp>	// (vcl)
#include <Vcl.Buttons.hpp>	// (vcl)
#include <Vcl.Imaging.pngimage.hpp>	// (vclimg)
#include <frxChm.hpp>	// (frx25)
#include <fs_iconst.hpp>	// (fs25)
#include <frxRes.hpp>	// (frx25)
#include <frxDPIAwareInt.hpp>	// (frx25)
#include <fs_itools.hpp>	// (fs25)
#include <fs_iinterpreter.hpp>	// (fs25)
#include <frxDsgnIntf.hpp>	// (frx25)
#include <frxDMPClass.hpp>	// (frx25)
#include <frxStorage.hpp>	// (frx25)
#include <frxThreading.hpp>	// (frx25)
#include <frxPrinter.hpp>	// (frx25)
#include <frxSearchDialog.hpp>	// (frx25)
#include <Vcl.OleCtnrs.hpp>	// (vcl)
#include <frxRichEdit.hpp>	// (frx25)
#include <frxUnicodeCtrls.hpp>	// (frx25)
#include <frxInPlaceClipboards.hpp>	// (frx25)
#include <frxInPlaceEditors.hpp>	// (frx25)
#include <frxIOTransportIntf.hpp>	// (frx25)
#include <frxIOTransportDialog.hpp>	// (frx25)
#include <frxPreview.hpp>	// (frx25)
#include <frxGraphicUtils.hpp>	// (frx25)
#include <frxrcClass.hpp>	// (frx25)
#include <fs_iclassesrtti.hpp>	// (fs25)
#include <fs_igraphicsrtti.hpp>	// (fs25)
#include <fs_iformsrtti.hpp>	// (fs25)
#include <Vcl.Imaging.jpeg.hpp>	// (vclimg)
#include <frxClassRTTI.hpp>	// (frx25)
#include <fs_ipascal.hpp>	// (fs25)
#include <fs_icpp.hpp>	// (fs25)
#include <fs_ibasic.hpp>	// (fs25)
#include <fs_ijs.hpp>	// (fs25)
#include <fs_idialogsrtti.hpp>	// (fs25)
#include <fs_iinirtti.hpp>	// (fs25)
#include <frxClass.hpp>	// (frx25)
#include <IdGlobalProtocols.hpp>	// (IndyProtocols)
#include <IdCoderMIME.hpp>	// (IndyProtocols)
#include <IdAuthentication.hpp>	// (IndyProtocols)
#include <IdHTTPHeaderInfo.hpp>	// (IndyProtocols)
#include <IdThread.hpp>	// (IndyCore)
#include <IdSSL.hpp>	// (IndyProtocols)
#include <IdHeaderCoderBase.hpp>	// (IndyProtocols)
#include <IdHeaderCoderPlain.hpp>	// (IndyProtocols)
#include <IdHeaderCoder2022JP.hpp>	// (IndyProtocols)
#include <IdHeaderCoderIndy.hpp>	// (IndyProtocols)
#include <IdFIPS.hpp>	// (IndyProtocols)
#include <IdSSLOpenSSLHeaders.hpp>	// (IndyProtocols)
#include <IdSSLOpenSSL.hpp>	// (IndyProtocols)
#include <IdAuthenticationNTLM.hpp>	// (IndyProtocols)
#include <IdAuthenticationSSPI.hpp>	// (IndyProtocols)
#include <IdAuthenticationDigest.hpp>	// (IndyProtocols)
#include <IdLogBase.hpp>	// (IndyCore)
#include <frxNetUtils.hpp>	// (frx25)
#include <frxMapHelpers.hpp>	// (frx25)
#include <Vcl.AxCtrls.hpp>	// (vcl)
#include <Vcl.OleCtrls.hpp>	// (vcl)
#include <frxFPUMask.hpp>	// (frxIntIOBase25)
#include <Vcl.OleServer.hpp>	// (vcl)
#include <SHDocVw.hpp>	// (vclie)
#include <frxBrowser.hpp>	// (frxIntIOBase25)
#include <frxBrowserWeb.hpp>	// (frxIntIOBase25)
#include <frxSaveFilterBrowser.hpp>	// (frxIntIOBase25)
#include <System.JSON.hpp>	// (rtl)
#include <Winapi.Mapi.hpp>	// (rtl)
#include <IdMessageCoder.hpp>	// (IndyProtocols)
#include <IdCoderBinHex4.hpp>	// (IndyProtocols)
#include <IdMessageCoderMIME.hpp>	// (IndyProtocols)
#include <IdMessageCoderBinHex4.hpp>	// (IndyProtocols)
#include <IdMessageCoderQuotedPrintable.hpp>	// (IndyProtocols)
#include <IdCoderUUE.hpp>	// (IndyProtocols)
#include <IdCoderXXE.hpp>	// (IndyProtocols)
#include <IdMessageCoderUUE.hpp>	// (IndyProtocols)
#include <IdMessageCoderXXE.hpp>	// (IndyProtocols)
#include <IdSASL.hpp>	// (IndyProtocols)
#include <IdFTPListParseBase.hpp>	// (IndyProtocols)
#include <IdFTPListParseAS400.hpp>	// (IndyProtocols)
#include <IdFTPListParseBullGCOS7.hpp>	// (IndyProtocols)
#include <IdFTPListParseBullGCOS8.hpp>	// (IndyProtocols)
#include <IdFTPListParseChameleonNewt.hpp>	// (IndyProtocols)
#include <IdFTPListParseCiscoIOS.hpp>	// (IndyProtocols)
#include <IdFTPListParseDistinctTCPIP.hpp>	// (IndyProtocols)
#include <IdFTPListParseEPLF.hpp>	// (IndyProtocols)
#include <IdFTPListParseNovellNetware.hpp>	// (IndyProtocols)
#include <IdFTPListParseHellSoft.hpp>	// (IndyProtocols)
#include <IdFTPListParseIEFTPGateway.hpp>	// (IndyProtocols)
#include <IdFTPListParseKA9Q.hpp>	// (IndyProtocols)
#include <IdFTPListParseMicrowareOS9.hpp>	// (IndyProtocols)
#include <IdFTPListParseMPEiX.hpp>	// (IndyProtocols)
#include <IdFTPListParseMusic.hpp>	// (IndyProtocols)
#include <IdFTPListParseMVS.hpp>	// (IndyProtocols)
#include <IdFTPListParseNCSAForDOS.hpp>	// (IndyProtocols)
#include <IdFTPListParseNCSAForMACOS.hpp>	// (IndyProtocols)
#include <IdFTPListParseNovellNetwarePSU.hpp>	// (IndyProtocols)
#include <IdFTPListParseOS2.hpp>	// (IndyProtocols)
#include <IdFTPListParsePCNFSD.hpp>	// (IndyProtocols)
#include <IdFTPListParsePCTCP.hpp>	// (IndyProtocols)
#include <IdFTPListParseStercomOS390Exp.hpp>	// (IndyProtocols)
#include <IdFTPListParseStercomUnixEnt.hpp>	// (IndyProtocols)
#include <IdFTPListParseStratusVOS.hpp>	// (IndyProtocols)
#include <IdFTPListParseSuperTCP.hpp>	// (IndyProtocols)
#include <IdFTPListParseTandemGuardian.hpp>	// (IndyProtocols)
#include <IdFTPListParseTOPS20.hpp>	// (IndyProtocols)
#include <IdFTPListParseTSXPlus.hpp>	// (IndyProtocols)
#include <IdFTPListParseUnisysClearPath.hpp>	// (IndyProtocols)
#include <IdFTPListParseUnix.hpp>	// (IndyProtocols)
#include <IdFTPListParseVM.hpp>	// (IndyProtocols)
#include <IdFTPListParseVMS.hpp>	// (IndyProtocols)
#include <IdFTPListParseVSE.hpp>	// (IndyProtocols)
#include <IdFTPListParseVxWorks.hpp>	// (IndyProtocols)
#include <IdFTPListParseWfFTP.hpp>	// (IndyProtocols)
#include <IdFTPListParseWindowsNT.hpp>	// (IndyProtocols)
#include <IdFTPListParseWinQVTNET.hpp>	// (IndyProtocols)
#include <IdFTPListParseXecomMicroRTOS.hpp>	// (IndyProtocols)
// PRG_EXT: .bpl
// OBJ_EXT: .obj

//-- user supplied -----------------------------------------------------------

namespace Frxintioindy25
{
//-- forward type declarations -----------------------------------------------
//-- type declarations -------------------------------------------------------
//-- var, const, procedure ---------------------------------------------------
}	/* namespace Frxintioindy25 */
#if !defined(DELPHIHEADER_NO_IMPLICIT_NAMESPACE_USE) && !defined(NO_USING_NAMESPACE_FRXINTIOINDY25)
using namespace Frxintioindy25;
#endif
#pragma pack(pop)
#pragma option pop

#pragma delphiheader end.
//-- end unit ----------------------------------------------------------------
#endif	// Frxintioindy25HPP
